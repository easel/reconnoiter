<stratcon>
  <eventer/>

  <logs>
    <console_output>
      <outlet name="stderr"/>
      <log name="error"/>
      <log name="debug"/>
      <log name="error/iep"/>
      <log name="error/eventer" disabled="true"/>
      <log name="debug/eventer" disabled="true"/>
    </console_output>
  </logs>

  <noits>
    <config>
      <!--
        If we have a connection failure, attempt to reconnect
        immediately.  Upon failure wait 1000ms (1s) and
        exponentially backoff up to 900000ms (900s or 15m)
      -->
      <reconnect_initial_interval>1000</reconnect_initial_interval>
      <reconnect_maximum_interval>15000</reconnect_maximum_interval>
    </config>
    <sslconfig>
      <key_file>%sysconfdir%/%PKIPREFIX%stratcon.key</key_file>
      <certificate_file>%sysconfdir%/%PKIPREFIX%stratcon.crt</certificate_file>
      <ca_chain>%sysconfdir%/%PKIPREFIX%ca.crt</ca_chain>
    </sslconfig>
    <noit address="127.0.0.1" port="43191" />
  </noits>

  <iep disable="false"> <!-- false the default -->
    <start directory="%iepdbdir%"
           command="%iepbindir%/run-iep.sh" />
    <queries>
      <statement id="6cc613a4-7f9c-11de-973f-db7e8ccb2e5c" provides="CheckDetails-ddl">
        <epl>create window CheckDetails.std:unique(uuid).win:keepall() as NoitCheck</epl>
      </statement>
      <statement id="76598f5e-7f9c-11de-9f5b-ebb4dcb2494e" provides="CheckDetails">
        <requires>CheckDetails-ddl</requires>
        <epl>insert into CheckDetails select * from NoitCheck</epl>
      </statement>
      <statement id="ba189f08-7f99-11de-9013-733772d37479" provides="UnavailableStream">
        <requires>CheckDetails</requires>
        <epl>insert into UnavailableStream
             select p.* as delta, cds.target as target, cds.module as module,
                    cds.name as name, p.s.uuid as uuid
             from pattern [ every
                            s=NoitStatus(availability='A') ->
                            ( n0 = NoitStatus(uuid=s.uuid, availability='U')
                              and not NoitStatus(uuid=s.uuid, availability='A'))
                          ].std:lastevent() as p
             inner join CheckDetails as cds on cds.uuid = p.s.uuid
        </epl>
      </statement>
      <query id="ce6bf8d2-3dd7-11de-a45c-a7df160cba9e" topic="status">
        <epl>select * from NoitStatus</epl>
      </query>
    </queries>
  </iep>

  <database>
    <dbconfig>
      <host>localhost</host>
      <dbname>reconnoiter</dbname>
      <user>stratcon</user>
      <password>unguessable</password>
    </dbconfig>
    <statements>
      <allchecks><![CDATA[
        SELECT remote_address, id, target, module, name
          FROM stratcon.mv_loading_dock_check_s
      ]]></allchecks>
      <findcheck><![CDATA[
        SELECT remote_address, id
          FROM stratcon.mv_loading_dock_check_s
         WHERE sid = $1
      ]]></findcheck>
      <check><![CDATA[
        INSERT INTO stratcon.loading_dock_check_s
                    (remote_address, whence, sid, id, target, module, name)
             VALUES ($1, 'epoch'::timestamptz + ($2 || ' seconds')::interval,
                     stratcon.generate_sid_from_id($3), $3, $4, $5, $6)
      ]]></check>
      <status><![CDATA[
        INSERT INTO stratcon.loading_dock_status_archive_%Y%m
                    ( whence,sid, state, availability,
                     duration, status)
             VALUES ('epoch'::timestamptz + ($1 || ' seconds')::interval,
                     stratcon.generate_sid_from_id($2), $3, $4, $5, $6)
      ]]></status>
      <metric_numeric><![CDATA[
        INSERT INTO stratcon.loading_dock_metric_numeric_archive_%Y%m
                    (whence, sid, name, value)
             VALUES ( 'epoch'::timestamptz + ($1 || ' seconds')::interval,
                     stratcon.generate_sid_from_id($2), $3, $4)
      ]]></metric_numeric>
      <metric_text><![CDATA[
        INSERT INTO stratcon.loading_dock_metric_text_archive_%Y%m
                    ( whence, sid, name,value)
             VALUES ('epoch'::timestamptz + ($1 || ' seconds')::interval,
                     stratcon.generate_sid_from_id($2), $3, $4)
      ]]></metric_text>
      <config><![CDATA[
        SELECT stratcon.update_config
               ($1, $2, 
                'epoch'::timestamptz + ($3 || ' seconds')::interval,
                $4 )
      ]]></config>
    </statements>
  </database>

  <listeners>
  <consoles type="noit_console">
    <listener address="/tmp/stratcon">
      <config><line_protocol>telnet</line_protocol></config>
    </listener>
  </consoles>
  <realtime type="http_rest_api">
    <listener address="*" port="80">
      <config>
        <hostname>stratcon.noit.example.com</hostname>
        <document_domain>noit.example.com</document_domain>
      </config>
    </listener>
  </realtime>
  </listeners>

</stratcon>
