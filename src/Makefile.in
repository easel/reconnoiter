CC=@CC@
CPPFLAGS=@CPPFLAGS@
CFLAGS=@CFLAGS@
LDFLAGS=@LDFLAGS@
AR=@AR@
RANLIB=@RANLIB@
LIBS=@LIBS@
INSTALL=@INSTALL@

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
sbindir=@sbindir@
libdir=@libdir@
includedir=${prefix}/include
libexecdir=@libexecdir@
datarootdir = @datarootdir@
mandir=@mandir@
mansubdir=@mansubdir@
docdir=${prefix}/@docdir@
sysconfdir=@sysconfdir@
srcdir=@srcdir@
top_srcdir=@top_srcdir@

SUBS=utils jlog eventer modules noitedit

OBJS=noitd.o noit_listener.o \
	noit_console.o noit_console_state.o noit_console_telnet.o \
	noit_check.o noit_check_log.o noit_check_tools.o \
	noit_module.o noit_conf.o noit_conf_checks.o noit_tokenizer.o

all:	noitd testcerts

make-subdirs:	serf/.libs/libserf-0.a
	for dir in $(SUBS) ; do \
		(cd $$dir && make) ; \
	done

serf/.libs/libserf-0.a:
	(cd serf && python serfmake)

noitd:	make-subdirs $(OBJS)
	$(CC) -o $@ $(OBJS) \
		$(LDFLAGS) \
		-Leventer -leventer \
		-Lutils -lnoit_utils \
		-Ljlog -ljlog \
		-Lnoitedit -lnoitedit \
		$(LIBS)

.c.o:
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $<

noit_tokenizer.c:	noit_tokenizer.re
	re2c -o $@ noit_tokenizer.re

test.key:
	openssl genrsa -out test.key

test.csr:	test.key
	openssl req -key test.key -days 365 -new -out test.csr

test.crt:	test.key test.csr
	openssl x509 -req -in test.csr -signkey test.key -out test.crt

test-strat.key:
	openssl genrsa -out test-strat.key

test-strat.csr:	test-strat.key
	openssl req -key test-strat.key -days 365 -new -out test-strat.csr

test-strat.crt:	test-strat.key test-strat.csr
	openssl x509 -req -in test-strat.csr -signkey test-strat.key -out test-strat.crt

testcerts:	test.key test.crt test-strat.key test-strat.crt

clean-subdirs:
	for dir in $(SUBS) ; do \
		(cd $$dir && make clean) ; \
	done

clean:	clean-subdirs
	rm -f *.o noitd test.key test.csr test.crt

